// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id       String     @id @default(auto()) @map("_id") @db.ObjectId
  email    String
  password String
  youtube  Youtube[]
  reaction Reaction[]
  sayar    Sayar[]
}

model Content {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  description String
}

model Account {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String
}

model Lesson {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  video       String
  title       String
  description String @default("what")
}

model Practice {
  id            String @id @default(auto()) @map("_id") @db.ObjectId
  videoForVimeo String
}

model Youtube {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  videoId     String
  title       String
  description String
  user        User?      @relation(fields: [userId], references: [id])
  userId      String?    @db.ObjectId
  reaction    Reaction[]
}

model Reaction {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  type      String
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?  @db.ObjectId
  youtube   Youtube? @relation(fields: [youtubeId], references: [id])
  youtubeId String?  @db.ObjectId
}

model Sayar {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  videoId     String
  title       String
  description String
  user        User?   @relation(fields: [userId], references: [id])
  userId      String? @db.ObjectId
}
